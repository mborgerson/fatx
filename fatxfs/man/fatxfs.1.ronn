fatxfs(1) -- Userspace FATX Filesystem Driver
=============================================

SYNOPSIS
--------
### Mounting
`fatxfs` <device> <mountpoint> [<options>]<br>
`fatxfs` <device> <mountpoint> --drive=`c`|`e`|`x`|`y`|`z` [<options>]<br>
`fatxfs` <device> <mountpoint> --offset=<offset> --size=<size> [<options>]<br>

### Unmounting
`fusermount` `-u` <mountpoint>

DESCRIPTION
-----------
**fatxfs** is a userspace filesystem driver for the FATX filesystem, a varient
of FAT16/32 developed by Microsoft for the original Xbox console.

<device> should be a path to either a block device or an image file.
<mountpoint> should be a path to an empty directory.

The original retail Xbox harddisk does not have a traditional partition map
(i.e. master boot record). Instead, the Xbox kernel knows exactly where each
partition begins and ends. Likewise, fatxfs also knows where the partitions
reside on the standard retail Xbox harddisk. To mount a partition on a retail
Xbox harddisk, specify the desired partition with the `-o partition` option. For
instance, to mount the system partition ("C drive"):

    fatxfs /dev/nbd0 /mnt --drive=c

To mount a partition manually, specify the offset and size (in bytes) of the
partition using the `-o offset` and `-o size`, respectively. For instance, to
mount the system partition manually:

    fatxfs /dev/nbd0 /mnt --offset=0x8ca80000 --size=0x01f400000

If neither a drive letter nor an offset/size pair are specified, the "C drive"
will be used.

OPTIONS
-------
### General Options:
   * -o opt, [opt...]:
     mount options

   * -h --help:
     print help

   * -V --version:
     print version

### FATXFS options:
   * --drive=<letter>:
     mount a partition by its drive letter

   * --offset=<offset>:
     specify the offset (in bytes) of a partition manually

   * --size=<size>:
     specify the size (in bytes) of a partition manually

   * --sector-size=<size>
     specify the size (in bytes) of a device sector (default is 512)

   * --log=<log path>:
     enable fatxfs logging

   * --loglevel=<level>:
     control the log output level (a higher value yields more output)

### FUSE options:
   * -d   -o debug:
     enable debug output (implies -f)

   * -f:
     foreground operation

   * -s:
     disable multi-threaded operation

   * -o allow_other:
     allow access to other users

   * -o allow_root:
     allow access to root

   * -o auto_unmount:
     auto unmount on process termination

   * -o nonempty:
     allow mounts over non-empty file/dir

   * -o default_permissions:
     enable permission checking by kernel

   * -o fsname=<NAME>:
     set filesystem name

   * -o subtype=<NAME>:
     set filesystem type

   * -o large_read:
     issue large read requests (2.4 only)

   * -o max_read=<N>:
     set maximum size of read requests

   * -o hard_remove:
     immediate removal (don't hide files)

   * -o use_ino:
     let filesystem set inode numbers

   * -o readdir_ino:
     try to fill in d_ino in readdir

   * -o direct_io:
     use direct I/O

   * -o kernel_cache:
     cache files in kernel

   * -o [no]auto_cache:
     enable caching based on modification times (off)

   * -o umask=<M>:
     set file permissions (octal)

   * -o uid=<N>:
     set file owner

   * -o gid=<N>:
     set file group

   * -o entry_timeout=<T>:
     cache timeout for names (1.0s)

   * -o negative_timeout=<T>:
     cache timeout for deleted names (0.0s)

   * -o attr_timeout=<T>:
     cache timeout for attributes (1.0s)

   * -o ac_attr_timeout=<T>:
     auto cache timeout for attributes (attr_timeout)

   * -o noforget:
     never forget cached inodes

   * -o remember=<T>:
     remember cached inodes for T seconds (0s)

   * -o intr:
     allow requests to be interrupted

   * -o intr_signal=<NUM>:
     signal to send on interrupt (10)

   * -o modules=<M1>[:<M2>...]:
     names of modules to push onto filesystem stack

   * -o max_write=<N>:
     set maximum size of write requests

   * -o max_readahead=<N>:
     set maximum readahead

   * -o max_background=<N>:
     set number of maximum background requests

   * -o congestion_threshold:
     =N  set kernel's congestion threshold

   * -o async_read:
     perform reads asynchronously (default)

   * -o sync_read:
     perform reads synchronously

   * -o atomic_o_trunc:
     enable atomic open+truncate support

   * -o big_writes:
     enable larger than 4kB writes

   * -o no_remote_lock:
     disable remote file locking

   * -o no_remote_flock:
     disable remote file locking (BSD)

   * -o no_remote_posix_lock:
     disable remove file locking (POSIX)

   * -o [no_]splice_write:
     use splice to write to the fuse device

   * -o [no_]splice_move:
     move data while splicing to the fuse device

   * -o [no_]splice_read:
     use splice to read from the fuse device

BUGS
----
Report bugs at https://github.com/mborgerson/fatx.

AUTHOR
------
Matt Borgerson

COPYRIGHT
---------
Copyright (C) 2015  Matt Borgerson

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

SEE ALSO
--------
fusermount(1), mount.fuse(8), mount(8)